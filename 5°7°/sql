-- Active: 1691412339871@@127.0.0.1@3306
DROP DATABASE IF EXISTS 5to_Espochifai;
CREATE DATABASE 5to_Espochifai;
USE 5to_Espochifai;
CREATE TABLE Banda (
idBanda SMALLINT UNSIGNED,
Nombre VARCHAR(45),
Fundacion YEAR,
PRIMARY KEY(idBanda)
);
CREATE TABLE Album (
idAlbum TINYINT UNSIGNED,
idBanda SMALLINT UNSIGNED,
Nombre VARCHAR(45),
Contador int,
Lanzamiento DATE,
PRIMARY KEY(idAlbum),
FOREIGN KEY(idBanda) REFERENCES Banda (idBanda)
);
CREATE TABLE Cancion (
idCancion TINYINT UNSIGNED,
idAlbum TINYINT UNSIGNED,
Nombre VARCHAR(45),
Contador int,
Num_Orden TINYINT UNSIGNED,
PRIMARY KEY(idCancion),
FOREIGN KEY(idAlbum) REFERENCES Album (idAlbum)
);
CREATE TABLE Cliente (
idCliente INT UNSIGNED,
Nombre VARCHAR(45),
Apellido VARCHAR(45),
Email VARCHAR(45),
Contra CHAR(64),
PRIMARY KEY(idCliente)
);
CREATE TABLE Reproduccion (
idCliente INT UNSIGNED,
idCancion TINYINT UNSIGNED,
Tiempo_Repro DATETIME,
PRIMARY KEY(idCliente, idCancion, Tiempo_Repro),
FOREIGN KEY(idCliente) REFERENCES Cliente(idCliente),
FOREIGN KEY(idCancion) REFERENCES Cancion(idCancion)
);
USE 5to_Espochifai;
DELIMITER $$
DROP PROCEDURE IF EXISTS AltaBanda $$
Create procedure AltaBanda ( unidBanda SMALLINT UNSIGNED,
unNombre varchar(45),
unContador int,
unafundacion year )
begin
	INSERT INTO Banda (idBanda,nombre,fundacion)
	Values(unidBanda, unNombre, unafundacion);
end $$
DELIMITER $$
DROP PROCEDURE IF EXISTS AltaAlbum $$
Create procedure AltaAlbum( unidAlbum TINYINT UNSIGNED,
unidBanda SMALLINT ,
unNombre VARCHAR(45),
unLanzamiento DATE)
begin
	INSERT INTO Album (idAlbum ,idBanda ,Nombre,Lanzamiento )
	values(unidAlbum,unidBanda,unNombre,unLanzamiento);
end $$
DELIMITER $$
DROP PROCEDURE IF EXISTS AltaCancion $$
Create procedure AltaCancion( unidCancion TINYINT UNSIGNED,
unidAlbum TINYINT ,
unNombre VARCHAR(45),
unContador int,
unNum_Orden TINYINT)
begin
	INSERT INTO Cancion (idCancion,idAlbum ,Nombre ,Num_Orden)
	values( unidCancion,unidAlbum,unNombre ,unNum_Orden);
end $$
DELIMITER $$
DROP PROCEDURE IF EXISTS RegistrarCliente $$
Create procedure RegistrarCliente ( unidCliente INT UNSIGNED,
unNombre VARCHAR(45),
unApellido VARCHAR(45),
unEmail VARCHAR(45),
unContra CHAR(64))
begin
INSERT INTO Cliente (idCliente, Nombre, Apellido, Email, Contra)
				values (unidCliente,unNombre,unApellido,unEmail,SHA2(unContra,256));
end $$
DELIMITER $$
drop function if exists CantidadReproduccionesBanda $$
create function CantidadReproduccionesBanda (unidBanda TINYINT,fecha1 DATE,fecha2 DATE)
	RETURNS INT READS SQL DATA
begin
	DECLARE CantRepro INT;
SELECT COUNT(*) INTO CantRepro
FROM reproducir
WHERE tiempo_repro BETWEEN fecha1 AND fecha2;
RETURN CantRepro;
end $$
DELIMITER $$
DROP FUNCTION IF EXISTS Altabuscar $$
CREATE FUNCTION Altabuscar(unacadena VARCHAR(45))
RETURNS VARCHAR(45) READS SQL DATA
BEGIN
DECLARE resultado VARCHAR(45);
SELECT Nombre INTO resultado
FROM Cancion c
join Album a using (idAlbum)
join Banda b using (idBanda)
WHERE MATCH (Nombre) AGAINST (unacadena IN NATURAL LANGUAGE MODE);
RETURN resultado;
END $$
CALL AltaBanda(1, "Rata Blanca", 1985) $$
CALL AltaAlbum(1, 1, "Magos,espadas y rosas", '1990-04-24') $$
CALL AltaCancion(1, 1, "Mujer amante", 1) $$
CALL RegistrarCliente (1, "Facundo", "Mansilla", "mansillafacundo11@gmail.com",0) $$

DELIMITER $$
DROP TRIGGER IF EXISTS InsAftReproduccion $$
CREATE TRIGGER InsAftReproduccion AFTER INSERT ON Reproduccion
FOR EACH ROW
BEGIN
UPDATE Cancion
SET Contador = Contador + 1
WHERE idCancion = Reproduccion.idCancion;
END $$
DELIMITER $$
DROP TRIGGER IF EXISTS updAftAlbum $$
CREATE TRIGGER updAftAlbum AFTER UPDATE ON Cancion
FOR EACH ROW
BEGIN
UPDATE Album
SET Contador = Contador + 1
WHERE idAlbum = Cancion.idAlbum;
END $$
